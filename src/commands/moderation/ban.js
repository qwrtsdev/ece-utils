const { 
    SlashCommandBuilder, 
    PermissionFlagsBits, 
    InteractionContextType, 
    MessageFlags,
    ThumbnailBuilder, 
    SectionBuilder,
    TextDisplayBuilder, 
    SeparatorBuilder, 
    SeparatorSpacingSize, 
    ButtonBuilder, 
    ButtonStyle, 
    ActionRowBuilder, 
    ContainerBuilder 
} = require('discord.js');

module.exports = {
    cooldown: 5,
    data: new SlashCommandBuilder()
		.setName('ban')
		.setDescription('‡πÅ‡∏ö‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå')
        .addUserOption(option =>
            option.setName('target')
                .setDescription('‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô')
                .setRequired(true)
        )
        .addStringOption(option =>
            option.setName('reason')
                .setDescription('‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°')
                .setRequired(false)
        )
        .setDefaultMemberPermissions(PermissionFlagsBits.BanMembers)
        .setContexts(InteractionContextType.Guild),
    async execute(interaction) {
        try {
            const target = interaction.options.getMember('target');
            const reason = interaction.options.getString('reason') ?? '-';
            const unixTime = Math.floor(Date.now() / 1000);

            if (!target) {
                return await interaction.reply({
                    content: 'üö´ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ',
                    flags: MessageFlags.Ephemeral
                });
            }

            if (target.id === interaction.user.id) {
                return await interaction.reply({
                    content: 'üö´ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ö‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ',
                    flags: MessageFlags.Ephemeral
                });
            }

            if (!target.kickable) {
                return await interaction.reply({
                    content: 'üö´ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏ö‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å‡πÑ‡∏î‡πâ (‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå)',
                    flags: MessageFlags.Ephemeral
                });
            }

            const promptComponents = [
                new ContainerBuilder()
                    .addTextDisplayComponents(
                        new TextDisplayBuilder().setContent("# ‚ùì **‡∏Ñ‡∏∏‡∏ì‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà**"),
                    )
                    .addTextDisplayComponents(
                        new TextDisplayBuilder().setContent(`‡∏´‡∏≤‡∏Å‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å\n\nüë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : <@${target.user.id}> (${target.user.id})\nüî® ‡∏ú‡∏π‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ :  <@${interaction.user.id}> (${interaction.user.id})\nüïë ‡πÄ‡∏ß‡∏•‡∏≤ :  <t:${unixTime}:f>\nüìÑ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏• :  ${reason}\n\n-# ‡πÇ‡∏õ‡∏£‡∏î‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏`),
                    )
                    .addSeparatorComponents(
                        new SeparatorBuilder().setSpacing(SeparatorSpacingSize.Large).setDivider(true),
                    )
                    .addActionRowComponents(
                        new ActionRowBuilder()
                            .addComponents(
                                new ButtonBuilder()
                                    .setStyle(ButtonStyle.Danger)
                                    .setLabel("‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô")
                                    .setEmoji({
                                        name: "‚úÖ",
                                    })
                                    .setCustomId("confirm_ban"),
                                new ButtonBuilder()
                                    .setStyle(ButtonStyle.Secondary)
                                    .setLabel("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å")
                                    .setCustomId("cancel_ban"),
                            ),
                    ),
            ];

            const response = await interaction.reply({ 
                components: promptComponents,
                flags: MessageFlags.Ephemeral | MessageFlags.IsComponentsV2,
            });

            const collectorFilter = i => i.user.id === interaction.user.id;

            try {
                const confirmation = await response.awaitMessageComponent({ 
                    filter: collectorFilter, 
                    time: 10_000 
                });

                if (confirmation.customId === 'confirm_ban') {
                    const processingComponents = [ 
                        new ContainerBuilder()
                            .addTextDisplayComponents(
                                new TextDisplayBuilder().setContent(`### **‚åõ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô <@${target.user.id}>**\n-# ‡∏≠‡∏≤‡∏à‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà..`),
                            )
                    ]

                    await confirmation.update({ 
                        components: processingComponents
                    });

                    try {
                        const dmComponents = [
                            new ContainerBuilder()
                                .addTextDisplayComponents(
                                    new TextDisplayBuilder().setContent("# **üö´ ‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå**"),
                                )
                                .addTextDisplayComponents(
                                    new TextDisplayBuilder().setContent(`üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : <@${target.user.id}>\nüïë ‡πÄ‡∏ß‡∏•‡∏≤ : <t:${unixTime}:f>\nüìÑ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏• :  ${reason}\n\n-# ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô ‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å\n-# ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏∑‡πà‡∏ô‡∏≠‡∏∏‡∏ó‡∏£‡∏ì‡πå‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏î‡πÅ‡∏ö‡∏ô`),
                                )
                                .addSeparatorComponents(
                                    new SeparatorBuilder().setSpacing(SeparatorSpacingSize.Large).setDivider(true),
                                )
                                .addActionRowComponents(
                                    new ActionRowBuilder()
                                        .addComponents(
                                            new ButtonBuilder()
                                                .setStyle(ButtonStyle.Link)
                                                .setLabel("‡∏¢‡∏∑‡πà‡∏ô‡∏≠‡∏∏‡∏ó‡∏£‡∏ì‡πå")
                                                .setEmoji({
                                                    name: "üìé",
                                                })
                                                .setURL("https://google.com")
                                                .setDisabled(true)
                                        ),
                                ),
                        ];

                        await target.send({ 
                            components: dmComponents,
                            flags: MessageFlags.IsComponentsV2
                        });
                    } catch (error) {
                        console.error('[kick] direct message error :', error);
                    }

                    try {
                        await target.kick(reason);

                        try {
                            const publicNotiChannel = interaction.client.channels.cache.get('1385692246413676766');

                            const notiComponents = [
                                new ContainerBuilder()
                                    .addTextDisplayComponents(
                                        new TextDisplayBuilder().setContent("# **üö´ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ñ‡∏π‡∏Å‡πÅ‡∏ö‡∏ô‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå**"),
                                    )
                                    .addTextDisplayComponents(
                                        new TextDisplayBuilder().setContent(`üë§ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô : <@${target.user.id}> (${target.user.tag})\nüî® ‡∏ú‡∏π‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ : <@${interaction.user.id}>\nüïë ‡πÄ‡∏ß‡∏•‡∏≤ : <t:${unixTime}:f>\nüìÑ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏• : ${reason}\n\n-# ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ô‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡∏ô ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å`),
                                    )
                            ];

                            if (publicNotiChannel) {
                                const publicMessage = await publicNotiChannel.send({ 
                                    components: notiComponents,
                                    flags: MessageFlags.IsComponentsV2
                                });
                                await publicMessage.react('üëãüèª');
                            }
                        } catch (error) {
                            console.error('[kick] notification error :', error);
                        }

                        const successComponents = [
                            new ContainerBuilder()
                                .addTextDisplayComponents(
                                    new TextDisplayBuilder().setContent(`### ‚úÖ **‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à**\n-# <@${target.user.id}> ‡∏ñ‡∏π‡∏Å‡πÄ‡∏ï‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß`),
                                )
                        ]

                        await confirmation.editReply({
                            components: successComponents,
                        });

                    } catch (error) {
                        console.error('[kick] kick error :', error);

                        const errorComponents = [
                            new ContainerBuilder()
                                .addTextDisplayComponents(
                                    new TextDisplayBuilder().setContent(`### ‚ùå **‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏∞**\n-# ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ <@824442267318222879>`),
                                )
                        ]

                        await confirmation.editReply({
                            components: errorComponents,
                        });
                    }

                } else if (confirmation.customId === 'cancel_kick') {
                    const cancelComponents = [
                        new ContainerBuilder()
                            .addTextDisplayComponents(
                                new TextDisplayBuilder().setContent(`### ‚ùå **‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å**\n-# ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠`),
                            )
                    ]

                    await confirmation.update({
                        components: cancelComponents,
                    });
                }
                
            } catch (error) {
                console.error('[kick] interaction timeout :', error);

                const timeoutComponents = [
                    new ContainerBuilder()
                        .addTextDisplayComponents(
                            new TextDisplayBuilder().setContent(`### ‚åõ **‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏´‡∏°‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏•‡πâ‡∏ß**\n-# ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠`),
                        )
                ]

                await interaction.editReply({
                    components: timeoutComponents,
                });
            }

        } catch (error) {
            console.error('[kick] command execution error :', error);
            
            if (interaction.replied || interaction.deferred) {
                await interaction.followUp({ 
                    content: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á', 
                    flags: MessageFlags.Ephemeral 
                });
            } else {
                await interaction.reply({ 
                    content: '‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á', 
                    flags: MessageFlags.Ephemeral 
                });
            }
        }
    }
}